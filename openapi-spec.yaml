openapi: 3.0.0
info:
  title: Custom API
  description: A custom FastAPI application with CRUD endpoints
  version: 1.0.0
servers:
  - url: https://task-maker-vc02.onrender.com/
    description: Development server

paths:
  /items:
    get:
      summary: Get all items
      description: Retrieve a list of all items
      responses:
        "200":
          description: A list of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"

    post:
      summary: Create a new item
      description: Create a new item with the provided details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "201":
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "400":
          description: Item already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /items/{item_name}:
    get:
      summary: Get item by name
      description: Retrieve an item's details by its name
      parameters:
        - name: item_name
          in: path
          required: true
          schema:
            type: string
          description: Name of the item to retrieve
      responses:
        "200":
          description: Item found successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "404":
          description: Item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Delete an item by name
      description: Delete an item by its name
      parameters:
        - name: item_name
          in: path
          required: true
          schema:
            type: string
          description: Name of the item to delete
      responses:
        "200":
          description: Item deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Item deleted successfully"
        "404":
          description: Item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Item:
      type: object
      properties:
        name:
          type: string
          description: Name of the item
        description:
          type: string
          description: Optional description of the item
          nullable: true
        price:
          type: number
          format: float
          description: Price of the item
      required:
        - name
        - price

    Error:
      type: object
      properties:
        detail:
          type: string
          description: Error message
